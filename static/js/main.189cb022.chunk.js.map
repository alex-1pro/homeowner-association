{"version":3,"sources":["reportWebVitals.js","shared/ActiveUserContext.js","components/NavbarHOA/NavbarHOA.jsx","model/IssueModel.js","pages/DashboardPage/DashboardPage.jsx","pages/HomePage/HomePage.jsx","pages/LoginPage/LoginPage.jsx","model/UserModel.js","components/CommentComponent/CommentComponent.jsx","components/DeleteModal/DeleteModal.jsx","components/MessageComponent/MessageComponent.jsx","model/CommentModel.js","components/NewMessageModal/NewMessageModal.jsx","pages/MessagePage/MessagePage.jsx","model/MessageModel.js","components/UpdateFormComponent/UpdateFormComponent.jsx","components/InfoTenantModal/InfoTenantModal.jsx","components/TenantComponent/TenantComponent.jsx","pages/TenantsPage/TenantsPage.jsx","App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ActiveUserContext","createContext","NavbarHOA","onLogout","activeUser","useContext","className","fname","Navbar","bg","expand","variant","Container","fluid","Brand","href","Toggle","Collapse","id","Nav","Link","onClick","IssueModel","plainIssue","this","reatedBy","createdBy","createdAt","title","details","image","priority","status","comments","communityId","DashboardPage","useState","jsonIssues","map","issues","filter","issue","to","HomePage","props","LoginPage","users","onLogin","email","setEmail","pwd","setPwd","showInvalidLogin","setShowInvalidLogin","Alert","onClose","dismissible","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","Button","find","user","UserModel","plainUser","lname","isCommittee","apt","img","CommentComponent","comment","console","log","length","Row","Col","md","sm","Image","src","roundedCircle","text","DeleteModal","onShow","onDelete","msg","Modal","show","onHide","Header","closeButton","Title","Body","Footer","MessageComponent","msgCreatedBy","setIsRead","isRead","onAddComment","onRemove","hide","setHide","textInput","setTextIput","hoverInfo","setHoverInfo","hoverDel","setHoverDel","showModal","setShowModal","commetComp","c","btnDelete","size","onMouseOver","onMouseLeave","CommentModel","plainCmt","topicId","NewMessageModal","onCreate","setTitle","setDetails","setPriority","setImg","as","column","rows","accept","files","Select","URL","createObjectURL","MessagePage","messages","allComments","setAllComments","onNewMessage","allMessageComments","cmt","addNewComment","newComment","nanoid","Date","toISOString","slice","concat","msgsComps","m","MessageModel","plainMessage","UpdateFormComponent","onUpdateTenanat","tenant","onShowBtnHideForm","setFname","setLname","setApt","password","setPassword","setIsCommittee","showInvalidPsw","setShowInvalidPsw","span","offset","Check","label","updateTenant","InfoTenantModal","onRemoveTenant","onUpdateTenant","hideForm","setHideForm","adminActions","style","margin","close","dialogClassName","rounded","fontWeight","TenantComponent","tenantAction","TenantsPage","tenatsProps","tenants","App","jsonUsers","setUsers","setActiveUser","jsonMessages","setMessages","jsonComments","logout","onAddTenant","newUser","indexTenant","indexOf","tempArr","splice","index","findIndex","onCheck","Provider","exact","path","newMessage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.189cb022.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './NavbarHOA.css'\r\nimport { BiMessageAltDetail } from 'react-icons/bi'\r\nimport { FiLogIn, FiLogOut,FiUsers } from 'react-icons/fi'\r\nimport { AiOutlineForm, AiOutlineHome } from 'react-icons/ai'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\nimport { NavLink } from 'react-router-dom';\r\nfunction NavbarHOA({ onLogout }) {\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n\r\n    return (\r\n        <div className=\"c-navbar\">\r\n            {/* <p>Hi {activeUser.fname}</p> */}\r\n            {activeUser ? <p>Hi {activeUser.fname}</p> : null}\r\n            <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n\r\n                <Container fluid>\r\n\r\n                    <Navbar.Brand href=\"#/\">HOA  <AiOutlineHome /> </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            {/* {activeUser ? <Nav.Link href=\"#/dashboard\">Dashboard  <RiDashboardLine /></Nav.Link> : null} */}\r\n                            {activeUser ? <Nav.Link href=\"#/message\">Message <BiMessageAltDetail /> </Nav.Link> : null}\r\n                            {activeUser ? <Nav.Link href=\"#/tenants\">Tenants <FiUsers /> </Nav.Link> : null}\r\n                        </Nav>\r\n                        <Nav className=\"ms-auto\">\r\n                            {!activeUser ? <Nav.Link href=\"#/login\">Login <FiLogIn /> </Nav.Link> : null}\r\n                            {!activeUser ? <Nav.Link href=\"#/signup\">Signup <AiOutlineForm /> </Nav.Link> : null}\r\n                            {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout <FiLogOut /> </Nav.Link> : null}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default NavbarHOA;","class IssueModel{\r\n    constructor(plainIssue){\r\n        this.id=plainIssue.id;\r\n        this.reatedBy=plainIssue.createdBy;\r\n        this.createdAt=plainIssue.createdAt;\r\n        this.title=plainIssue.title;\r\n        this.details=plainIssue.details;\r\n        this.image=plainIssue.image;\r\n        this.priority=plainIssue.priority;\r\n        this.status=plainIssue.status;\r\n        this.comments=plainIssue.comments;\r\n        this.communityId=plainIssue.communityId;\r\n    }\r\n}\r\n\r\nexport default IssueModel;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nimport IssueModel from '../../model/IssueModel';\r\nimport jsonIssues from \"../../data/issues.json\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\n\r\nfunction DashboardPage() {\r\n    // useState(jsonUsers.map(plainUser => new UserModel(plainUser)));\r\n    const [issues, setIssues] = useState(jsonIssues.map(plainIssue => new IssueModel(plainIssue)));\r\n    const activeUser = useContext(ActiveUserContext);\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>DashboardPage</h1>\r\n            <ul>{issues.filter(issue => issue.communityId === activeUser.communityId).map(title => <li>{title.title}</li>)}</ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport './HomePage.css'\r\nfunction HomePage(props) {\r\n    return (\r\n        <div>\r\n            HomePage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Container, Form, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './LoginPage.css'\r\n\r\n\r\nimport './LoginPage.css'\r\nfunction LoginPage({ users, onLogin }) {\r\n    const [email, setEmail] = useState(\"chuck@gmail.com\");\r\n    const [pwd, setPwd] = useState(\"123\");\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (activeUser) {\r\n        // return <Redirect to=\"/dashboard\" />\r\n        return <Redirect to=\"#/\"/>\r\n    }\r\n\r\n    function login() {\r\n        const activeUser = users.find(user => user.email === email && user.pwd === pwd);\r\n\r\n        if (activeUser) {\r\n            onLogin(activeUser);\r\n        } else {\r\n            setShowInvalidLogin(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <h1 className=\"p-header\">Login to Homeowner association </h1>\r\n           \r\n            {showInvalidLogin ?\r\n                <Alert variant=\"danger\" onClose={() => setShowInvalidLogin(false)} dismissible>Invalid Credentials!</Alert> : null}\r\n            <div className=\"p-form\">\r\n            <p>or <Link to=\"/signup\">create an account</Link></p>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\"\r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n                    <div className=\"d-grid gap-2\">\r\n                        <Button variant=\"success\" type=\"button\" onClick={login}>\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","class UserModel {\r\n    constructor(plainUser) {\r\n        this.id = plainUser.id;\r\n        this.fname = plainUser.fname;\r\n        this.lname = plainUser.lname;\r\n        this.email = plainUser.email;\r\n        this.pwd = plainUser.pwd;\r\n        this.isCommittee = plainUser.isCommittee;\r\n        this.apt = plainUser.apt;\r\n        this.communityId = plainUser.communityId;\r\n        this.img=plainUser.img;\r\n\r\n    }\r\n}\r\n\r\nexport default UserModel;","import React from 'react';\r\nimport { Container, Image, Row, Col } from 'react-bootstrap';\r\nimport './CommentComponent.css'\r\nfunction CommentComponent({ comment, createdBy }) {\r\n    console.log(createdBy);\r\n    if (createdBy.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"c-comment\">\r\n            <Container >\r\n                <Row>\r\n                    <Col md={3} sm={6}>\r\n                        <Image className=\"tenant-img\" src={createdBy[0].img} roundedCircle />\r\n                        <h1 className=\"comment-header\">{`${createdBy[0].fname} ${createdBy[0].lname}`}</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3} sm={6}>\r\n                        <p className=\"comment-date\">{comment.createdAt}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p className=\"comment-text\">{comment.text}</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentComponent;","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction DeleteModal({ onShow, onClose, onDelete ,msg }) {\r\n    function deleteAccept(){\r\n        onDelete();\r\n        onClose();\r\n    }\r\n    return (\r\n        <div>\r\n                <Modal show={onShow} onHide={onClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{msg.title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Do you sure want to delete this message?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={onClose}>\r\n                            No\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={deleteAccept}>\r\n                            Yes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteModal;","import React, { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport CommentComponent from '../CommentComponent/CommentComponent';\r\nimport \"./MessageComponent.css\";\r\nimport { FcInfo } from 'react-icons/fc';\r\nimport { FiInfo } from 'react-icons/fi';\r\nimport { RiDeleteBinLine, RiDeleteBinFill } from 'react-icons/ri';\r\nimport DeleteModal from '../DeleteModal/DeleteModal';\r\n\r\n\r\n//function MessageComponent({ msg, msgCreatedBy, setIsRead, isRead, comments, users, onAddComment, onTextComment, newCommentText, onRemove }) {\r\nfunction MessageComponent({ msg, msgCreatedBy, setIsRead, isRead, comments, users, onAddComment, onRemove }) {\r\n\r\n    const [hide, setHide] = useState(\"hide\");\r\n    const [textInput, setTextIput] = useState(\"\");\r\n    const [hoverInfo, setHoverInfo] = useState(false);\r\n    const [hoverDel, setHoverDel] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n\r\n\r\n\r\n    function showDetails() {\r\n        setHoverInfo(!hoverInfo)\r\n        setHide(hide ? \"\" : \"hide\");\r\n        setIsRead(\"true\");\r\n    }\r\n    function saveText() {\r\n        if (textInput) {\r\n            onAddComment(textInput, msg.id);\r\n            setTextIput(\"\");\r\n        }\r\n    }\r\n    //commetComp is array of comments belonging to message\r\n  \r\n    const commetComp = comments.map(c => <CommentComponent comment={c} createdBy={users.filter(user => user.id === c.createdBy)}/>)\r\n    \r\n                   \r\n        \r\n\r\n    const btnDelete = hoverDel ? <RiDeleteBinFill size=\"2em\" onClick={() => setShowModal(true)} /> : <RiDeleteBinLine size=\"2em\" />;\r\n\r\n    return (\r\n        // <div className={\"c-message \" + isRead} onClick={showDetails} >\r\n        <div className={\"c-message \"}  >\r\n\r\n\r\n\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col >{msgCreatedBy.fname + \" \" + msgCreatedBy.lname}</Col>\r\n                    <Col>{msg.title}</Col>\r\n                    <Col>{msg.createdAt}</Col>\r\n                    {/* <Col><div className=\"btn-hideshow\" onClick={showDetails}>{hide ? \"+\" : \"-\"}</div></Col> */}\r\n                    <Col>\r\n                        <div className=\"message-info\" onMouseOver={() => setHoverInfo(true)} onMouseLeave={() => setHoverInfo(false)}>\r\n                            {hoverInfo ? <FcInfo size=\"2em\" onClick={showDetails} /> : <FiInfo size=\"2em\" />}\r\n                        </div>\r\n                    </Col>\r\n                    {/* {activeUser.isCommittee ? <Col><div className=\"btn-hideshow\" onClick={() => onRemove(msg)}>X</div></Col> : null} */}\r\n                    {\r\n                        activeUser.isCommittee ?\r\n                            <Col>\r\n                                <div className=\"message-delete\" onMouseOver={() => setHoverDel(true)} onMouseLeave={() => setHoverDel(false)}>\r\n                                    {btnDelete}\r\n                                </div>\r\n                            </Col> : null\r\n                    }\r\n                </Row>\r\n                <Row>\r\n                    <Col className={\"commet-col \" + hide}>\r\n                        {msg.details}\r\n                        {commetComp}\r\n                        <div className=\"container-input\">\r\n                            <input className=\"comment-input\" value={textInput} type=\"text\" placeholder=\"Add new Comment\" onChange={e => setTextIput(e.target.value)} />\r\n                            <Button className=\"comment-btn\" variant=\"success\" onClick={() => saveText()}>Send</Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <DeleteModal onShow={showModal} onClose={() => setShowModal(false)} onDelete={() => onRemove(msg)} msg={msg} />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageComponent;","class CommentModel{\r\n    constructor(plainCmt){\r\n        this.id=plainCmt.id;\r\n        this.createdBy=plainCmt.createdBy;\r\n        this.createdAt=plainCmt.createdAt;\r\n        this.text=plainCmt.text;\r\n        this.comments=plainCmt.comments;\r\n        this.topicId=plainCmt.topicId;//topicId is id of message , issue  or comment\r\n    }\r\n}\r\n\r\nexport default CommentModel;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Row, Col, Image } from 'react-bootstrap';\r\n\r\nfunction NewMessageModal({ onShow, onClose, onCreate }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"Info\");\r\n    const [img, setImg] = useState(null);\r\n\r\n    function clearForm() {\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setPriority(\"Info\");\r\n        setImg(null);\r\n    }\r\n\r\n    function createMessage(){\r\n        onCreate(title, priority, img, details);\r\n        clearForm();\r\n        onClose();\r\n\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n        setImg(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Modal show={onShow} onHide={onClose} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>New Message</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalName\">\r\n                        <Form.Label column sm={3}>\r\n                            Message Title:\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"text\" value={title} onChange={e => setTitle(e.target.value)} />\r\n\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalDesc\">\r\n                        <Form.Label column sm={3}>\r\n                            Details:\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control as=\"textarea\" value={details} rows={3} onChange={e => setDetails(e.target.value)} />\r\n\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalImage\">\r\n                        <Form.Label column sm={3}>\r\n                            Image:\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalImage\">\r\n                    <Form.Label column sm={3}>\r\n                            Chose Priority:\r\n                        </Form.Label>  \r\n                    <Col sm={9}>\r\n                    <Form.Select aria-label=\"Default select example\"value={priority} onChange={e=>setPriority(e.target.value)}>\r\n                        <option value=\"Info\">Info</option>\r\n                        <option value=\"Important\">Important</option>\r\n                    </Form.Select>\r\n                    </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Image src={img ? URL.createObjectURL(img) : \"\"} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createMessage}>\r\n                    Create a Message\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nexport default NewMessageModal;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './MessagePage.css'\r\nimport { useContext } from 'react';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MessageComponent from '../../components/MessageComponent/MessageComponent';\r\nimport jsonComments from \"../../data/comments.json\"\r\nimport CommentModel from '../../model/CommentModel';\r\nimport CommentComponent from '../../components/CommentComponent/CommentComponent';\r\nimport { nanoid } from 'nanoid';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport NewMessageModal from '../../components/NewMessageModal/NewMessageModal';\r\nimport { BiMessageEdit } from 'react-icons/bi';\r\n\r\nfunction MessagePage({ users, messages, allComments, setAllComments,onNewMessage,onRemove}) {\r\n\r\n    const [isRead, setIsRead] = useState(\"nonSeen\");\r\n    const [showModal,setShowModal]=useState(false);\r\n    \r\n    const activeUser = useContext(ActiveUserContext);\r\n    \r\n\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    function msgCreatedBy(msg) {\r\n        return users.filter(user => user.id === msg.createdBy)[0];\r\n    }\r\n\r\n\r\n    function allMessageComments(msg) {\r\n\r\n        return allComments.filter(cmt => cmt.topicId === msg.id);\r\n    }\r\n\r\n    function addNewComment(text,topicId) {\r\n       \r\n\r\n            const newComment = new CommentModel({\r\n                id: nanoid(6),\r\n                createdBy: activeUser.id,\r\n                createdAt: new Date().toISOString().slice(0, 10),\r\n                text: text,\r\n                comments: null,\r\n                topicId: topicId\r\n            });\r\n            setAllComments(allComments.concat(newComment));\r\n\r\n      \r\n    }\r\n\r\n   \r\n\r\n\r\n    // filter return all community message  \r\n    const msgsComps = messages.filter(msg => msg.communityId === activeUser.communityId).\r\n        map(m => <MessageComponent msg={m} msgCreatedBy={msgCreatedBy(m)} setIsRead={setIsRead} isRead={isRead} comments={allMessageComments(m)} users={users}\r\n            onAddComment={addNewComment}  onRemove={onRemove} />);\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"p-message\">\r\n            <Container fluid>\r\n                <div className=\"msg-heading\">\r\n               {activeUser.isCommittee?<div className=\"new-message\" onClick={()=>setShowModal(true)}> New Message <BiMessageEdit/></div> :null}\r\n                </div>\r\n                <Row>\r\n                    {msgsComps}\r\n                </Row>\r\n                <NewMessageModal onShow={showModal} onClose={()=>setShowModal(false)} onCreate={onNewMessage}/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagePage;","class MessageModel{\r\n    constructor(plainMessage){\r\n        this.id=plainMessage.id;\r\n        this.createdBy=plainMessage.createdBy;\r\n        this.createdAt=plainMessage.createdAt;\r\n        this.title=plainMessage.title;\r\n        this.details=plainMessage.details;\r\n        this.priority=plainMessage.priority;\r\n        this.comments=plainMessage.comments;\r\n        this.communityId=plainMessage.communityId;\r\n        this.img=plainMessage.img;\r\n    }\r\n}\r\n\r\nexport default  MessageModel;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Form, Button, Row ,Alert} from 'react-bootstrap';\r\nimport UserModel from '../../model/UserModel';\r\n\r\nfunction UpdateFormComponent({ onUpdateTenanat, tenant, onShowBtnHideForm }) {\r\n    const [fname, setFname] = useState(tenant.fname);\r\n    const [lname, setLname] = useState(tenant.lname);\r\n    const [apt, setApt] = useState(tenant.apt);\r\n    const [email, setEmail] = useState(tenant.email);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isCommittee, setIsCommittee] = useState(tenant.isCommittee);\r\n    const [showInvalidPsw, setShowInvalidPsw] = useState(false);\r\n\r\n    function clearForm() {\r\n        setFname(\"\");\r\n        setLname(\"\");\r\n        setApt(\"\");\r\n        setEmail(\"\");\r\n        setIsCommittee(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    function updateTenantParams() {\r\n      if(!password){\r\n        setShowInvalidPsw(true)\r\n      }\r\n      else{  \r\n        const updateTenant = new UserModel(\r\n            {\r\n                id: tenant.id,\r\n                fname: fname,\r\n                lname: lname,\r\n                email: email,\r\n                pwd: password,\r\n                apt: apt,\r\n                communityId: tenant.communityId,\r\n                img: tenant.img,\r\n                isCommittee: isCommittee\r\n            });\r\n        onUpdateTenanat(updateTenant);\r\n        clearForm();\r\n        onShowBtnHideForm();\r\n    }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"c-update-form\">\r\n            <Form>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalFirstName\">\r\n                    <Form.Label column sm={2}>\r\n                        First Name:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"First Name\" value={fname} onChange={e => setFname(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalLastName\">\r\n                    <Form.Label column sm={2}>\r\n                        Last Name:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Last Name\" value={lname} onChange={e => setLname(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalApartment\">\r\n                    <Form.Label column sm={2}>\r\n                        Apartment:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Apartment\" value={apt} onChange={e => setApt(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n                {showInvalidPsw?<Alert variant=\"danger\" onClose={() => setShowInvalidPsw(false)} dismissible>Enter a password</Alert> : null}\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalCheck\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Form.Check label=\"Committee\" onChange={() => setIsCommittee(!isCommittee)} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button onClick={updateTenantParams}>Update Tenant</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateFormComponent;","\r\nimport React, { useContext } from 'react';\r\nimport { Modal, Image, Button } from 'react-bootstrap';\r\nimport './InfoTenantModal.css'\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport UpdateFormComponent from '../UpdateFormComponent/UpdateFormComponent';\r\nimport { useState } from 'react';\r\n\r\nfunction InfoTenantModal({ onShow, onClose, tenant, onRemoveTenant, onUpdateTenant }) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [hideForm, setHideForm] = useState(true);\r\n\r\n\r\n\r\n\r\n    const adminActions =\r\n        <>\r\n            {hideForm ?\r\n                <Button style={{ margin: \"5px\" }} variant=\"success\" onClick={() => setHideForm(false)}>\r\n                    Update Info\r\n                </Button> : null}\r\n            <Button style={{ margin: \"5px\" }} variant=\"danger\" onClick={deletTenant}>\r\n                Delete a {tenant.fname}\r\n            </Button>\r\n            {hideForm ? null : <UpdateFormComponent tenant={tenant} onUpdateTenanat={onUpdateTenant} onShowBtnHideForm={() => setHideForm(true)} />}\r\n        </>\r\n\r\n    function close() {\r\n        onClose();\r\n        setHideForm(true)\r\n    }\r\n    function deletTenant() {\r\n        onRemoveTenant(tenant);\r\n        close();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={onShow} onHide={close} dialogClassName=\"modal-90w\" aria-labelledby=\"example-custom-modal-styling-title\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        <Image className=\"modal-img\" src={tenant.img} rounded />\r\n                        {`${tenant.fname} ${tenant.lname}`}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p><span style={{ fontWeight: \"bold\" }}> Email: </span>{tenant.email}</p>\r\n                    <p><span style={{ fontWeight: \"bold\" }}> apt: </span>{tenant.apt}</p>\r\n                    {activeUser.isCommittee ? adminActions : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={close}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InfoTenantModal;","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Button, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport './TenantComponent.css';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { useState } from 'react';\r\nimport InfoTenantModal from '../InfoTenantModal/InfoTenantModal';\r\n\r\nfunction TenantComponent({ tenant,tenantAction }) {\r\n    // const [hide, setHide] = useState(\"hide\");\r\n    const [showModal,setShowModal]=useState(false);\r\n    \r\n    return (\r\n        <>\r\n            <Container>\r\n            {/* <Row className=\"c-tenant\" onClick={() => setHide(hide ? \"\" : \"hide\")}> */}\r\n                <Row className=\"c-tenant\" onClick={() => setShowModal(true)}>\r\n                    <Col key={tenant.id} md={3} sm={6}>\r\n                        <Image className=\"tenant-img\" src={tenant.img} roundedCircle />\r\n                        {`${tenant.fname} ${tenant.lname}`}\r\n                    </Col>\r\n                </Row>\r\n                {/* <Row className={\"tenant-info \"+hide}>\r\n            </Row> */}\r\n            <InfoTenantModal onShow={showModal} onClose={()=>setShowModal(false)}  tenant={tenant} onRemoveTenant={tenantAction.onRemoveTenant} onUpdateTenant={tenantAction.onUpdateTenant}/>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TenantComponent;","import React, { useContext } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TenantComponent from '../../components/TenantComponent/TenantComponent';\r\nimport UpdateFormComponent from '../../components/UpdateFormComponent/UpdateFormComponent';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\n\r\nfunction TenantsPage({ tenatsProps }) {\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    const tenants = tenatsProps.users.filter(user=>user.communityId===activeUser.communityId).map(tenant => <TenantComponent tenant={tenant} tenantAction={tenatsProps} />);\r\n\r\n\r\n    return (\r\n        <div className=\"p-tenants\">\r\n            <Container >\r\n                {tenants}\r\n                {/* <Button onClick={()=> tenatsProps.onCheck()}>check!</Button> */}\r\n               \r\n            </Container>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TenantsPage;","import { HashRouter, Route, Switch } from \"react-router-dom\";\nimport NavbarHOA from \"./components/NavbarHOA/NavbarHOA\";\nimport DashboardPage from \"./pages/DashboardPage/DashboardPage\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport { useState } from \"react\";\nimport UserModel from \"./model/UserModel\";\nimport ActiveUserContext from \"./shared/ActiveUserContext\";\nimport MessagePage from \"./pages/MessagePage/MessagePage\";\nimport MessageModel from \"./model/MessageModel\";\n\nimport jsonUsers from \"./data/users.json\"\nimport jsonMessages from \"./data/messages.json\"\nimport jsonComments from \"./data/comments.json\"\nimport CommentModel from \"./model/CommentModel\";\nimport { nanoid } from \"nanoid\";\nimport TenantsPage from \"./pages/TenantsPage/TenantsPage\";\n\nfunction App() {\n  const [users, setUsers] = useState(jsonUsers.map(plainUser => new UserModel(plainUser)));\n  const [activeUser, setActiveUser] = useState();\n  const [messages, setMessages] = useState(jsonMessages.map(msg => new MessageModel(msg)));\n  const [allComments, setAllComments] = useState(jsonComments.map(cmt => new CommentModel(cmt)));\n\n\n\n  function login(activeUser) {\n    setActiveUser(activeUser);\n\n  }\n  function logout() {\n    setActiveUser(null);\n\n  }\n\n  function createNewMessage(title, priority, img, details) {\n    const newMessage = new MessageModel({\n      id: nanoid(6),\n      createdBy: activeUser.id,\n      createdAt: new Date().toISOString().slice(0, 10),\n      title: title,\n      details: details,\n      priority: priority,\n      comments: null,\n      communityId: activeUser.communityId,\n      img: img\n    });\n    setMessages(messages.concat(newMessage));\n\n  }\n  /**\n   *  this.id = plainUser.id;\n          this.fname = plainUser.fname;\n          this.lname = plainUser.lname;\n          this.email = plainUser.email;\n          this.pwd = plainUser.pwd;\n          this.isCommittee=plainUser.isCommittee;\n          this.communityId=plainUser.communityId;\n   */\n\n  function addNewTenant(fname, lname, email, pwd, isCommittee,apt) {\n    const newUser = new UserModel({\n      id: nanoid(6),\n      fname: fname,\n      lname: lname,\n      email: email,\n      pwd: pwd,\n      isCommittee: isCommittee,\n      apt:apt,\n      communityId: activeUser.communityId\n    });\n\n    setUsers(messages.concat(newUser));\n  }\n  function removeTenant(tenant){\n    const indexTenant=users.indexOf(tenant);\n    const tempArr=[...users];\n    tempArr.splice(indexTenant, 1);\n    setUsers(tempArr);\n  }\n\n  function updateTenant(tenant){\n    const index = users.findIndex(user=>user.id===tenant.id);\n    const tempArr=[...users];\n    tempArr[index]=tenant;\n    setUsers(tempArr);\n  }\n  function check(){\n    console.log(\"work\");\n  }\n\n  const tenatsProps = {\n    users: users,\n    onAddTenant:addNewTenant,\n    onRemoveTenant:removeTenant,\n    onUpdateTenant:updateTenant,\n    onCheck:check\n  }\n\n\n\n  function deleteMessage(msg) {\n    const index = messages.indexOf(msg);\n    const tempArr = [...messages];\n    tempArr.splice(index, 1);\n    setMessages(tempArr);\n  }\n\n  return (\n    <div>\n\n      <ActiveUserContext.Provider value={activeUser}>\n        <HashRouter>\n          <Switch>\n\n            <Route exact path=\"/\">\n              <NavbarHOA onLogout={logout} />\n              <HomePage />\n            </Route>\n\n            <Route exact path=\"/login\">\n              <NavbarHOA onLogout={logout} />\n              <LoginPage users={users} onLogin={login} />\n            </Route>\n\n            <Route exact path=\"/dashboard\">\n              <NavbarHOA onLogout={logout} />\n              <DashboardPage />\n            </Route>\n\n            <Route exact path=\"/message\">\n              <NavbarHOA onLogout={logout} />\n              <MessagePage users={users} messages={messages} allComments={allComments} setAllComments={setAllComments} onNewMessage={createNewMessage} onRemove={deleteMessage} />\n            </Route>\n\n            <Route exact path=\"/tenants\">\n              <NavbarHOA onLogout={logout} />\n              <TenantsPage tenatsProps={tenatsProps}/>\n            </Route>\n\n          </Switch>\n        </HashRouter>\n      </ActiveUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}