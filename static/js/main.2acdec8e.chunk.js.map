{"version":3,"sources":["reportWebVitals.js","shared/ActiveUserContext.js","components/NavbarHOA/NavbarHOA.jsx","model/IssueModel.js","pages/DashboardPage/DashboardPage.jsx","pages/HomePage/HomePage.jsx","pages/LoginPage/LoginPage.jsx","model/UserModel.js","components/CommentComponent/CommentComponent.jsx","components/DeleteModal/DeleteModal.jsx","components/MessageComponent/MessageComponent.jsx","model/CommentModel.js","components/NewMessageModal/NewMessageModal.jsx","pages/MessagePage/MessagePage.jsx","model/MessageModel.js","components/UpdateFormComponent/UpdateFormComponent.jsx","components/InfoTenantModal/InfoTenantModal.jsx","components/TenantComponent/TenantComponent.jsx","components/NewTenantModal/NewTenantModal.jsx","pages/TenantsPage/TenantsPage.jsx","model/VotingModel.js","components/VotingComponent/VotingComponent.jsx","pages/VotingPage/VotingPage.jsx","App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ActiveUserContext","createContext","NavbarHOA","onLogout","activeUser","useContext","className","fname","Navbar","bg","expand","variant","Container","fluid","Brand","href","Toggle","Collapse","id","Nav","Link","onClick","IssueModel","plainIssue","this","reatedBy","createdBy","createdAt","title","details","image","priority","status","comments","communityId","DashboardPage","useState","jsonIssues","map","issues","filter","issue","to","HomePage","LoginPage","users","onLogin","email","setEmail","pwd","setPwd","showInvalidLogin","setShowInvalidLogin","Alert","onClose","dismissible","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","Button","find","user","UserModel","plainUser","lname","isCommittee","apt","img","CommentComponent","comment","length","Row","Col","md","sm","Image","src","roundedCircle","text","DeleteModal","onShow","onDelete","msg","Modal","show","onHide","Header","closeButton","Title","Body","Footer","MessageComponent","msgCreatedBy","setIsRead","isRead","onAddComment","onRemove","hide","setHide","textInput","setTextIput","hoverInfo","setHoverInfo","hoverDel","setHoverDel","showModal","setShowModal","commetComp","c","btnDelete","size","onMouseOver","onMouseLeave","CommentModel","plainCmt","topicId","NewMessageModal","onCreate","setTitle","setDetails","setPriority","setImg","as","column","rows","accept","files","Select","URL","createObjectURL","MessagePage","messages","allComments","setAllComments","onNewMessage","allMessageComments","cmt","addNewComment","newComment","nanoid","Date","toISOString","slice","concat","msgsComps","m","MessageModel","plainMessage","UpdateFormComponent","onUpdateTenanat","tenant","onShowBtnHideForm","setFname","setLname","setApt","password","setPassword","setIsCommittee","showInvalidPsw","setShowInvalidPsw","span","offset","Check","label","checked","updateTenant","InfoTenantModal","onRemoveTenant","onUpdateTenant","hideForm","setHideForm","adminActions","style","margin","close","dialogClassName","rounded","fontWeight","TenantComponent","tenantAction","NewTenantModal","onAddTenant","showInvalid","setShowInvalid","TenantsPage","tenatsProps","tenants","VotingModel","plainVoting","options","votes","VotingComponent","voting","onAnswer","allVoting","chartData","useMemo","console","log","yes","no","answer","labels","datasets","data","backgroundColor","borderColor","borderWidth","Card","inline","name","VotingPage","votingContent","rVotes","cv","App","jsonUsers","setUsers","setActiveUser","jsonMessages","setMessages","jsonComments","jsonVoting","vote","setAllVoting","logout","createNewMessage","newMessage","newUser","indexTenant","indexOf","tempArr","splice","index","findIndex","onCheck","deleteMessage","Provider","exact","path","cVote","indexUser","v","voteId","push","cloneAllVoting","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2acdec8e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './NavbarHOA.css'\r\nimport { BiMessageAltDetail } from 'react-icons/bi'\r\nimport { FiLogIn, FiLogOut,FiUsers } from 'react-icons/fi'\r\nimport {  TiChartPieOutline} from 'react-icons/ti'\r\nimport { AiOutlineForm, AiOutlineHome } from 'react-icons/ai'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\nimport { NavLink } from 'react-router-dom';\r\nfunction NavbarHOA({ onLogout }) {\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n\r\n    return (\r\n        <div className=\"c-navbar\">\r\n            {/* <p>Hi {activeUser.fname}</p> */}\r\n            {activeUser ? <p>Hi {activeUser.fname}</p> : null}\r\n            <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n\r\n                <Container fluid>\r\n\r\n                    <Navbar.Brand href=\"#/message\">HOA  <AiOutlineHome /> </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            {/* {activeUser ? <Nav.Link href=\"#/dashboard\">Dashboard  <RiDashboardLine /></Nav.Link> : null} */}\r\n                            {activeUser ? <Nav.Link href=\"#/message\">Message <BiMessageAltDetail /> </Nav.Link> : null}\r\n                            {activeUser ? <Nav.Link href=\"#/tenants\">Tenants <FiUsers /> </Nav.Link> : null}\r\n                            {activeUser ? <Nav.Link href=\"#/voting\">Votings <TiChartPieOutline /> </Nav.Link> : null}\r\n\r\n                        </Nav>\r\n                        <Nav className=\"ms-auto\">\r\n                            {!activeUser ? <Nav.Link href=\"#/login\">Login <FiLogIn /> </Nav.Link> : null}\r\n                            \r\n                            {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout <FiLogOut /> </Nav.Link> : null}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default NavbarHOA;","class IssueModel{\r\n    constructor(plainIssue){\r\n        this.id=plainIssue.id;\r\n        this.reatedBy=plainIssue.createdBy;\r\n        this.createdAt=plainIssue.createdAt;\r\n        this.title=plainIssue.title;\r\n        this.details=plainIssue.details;\r\n        this.image=plainIssue.image;\r\n        this.priority=plainIssue.priority;\r\n        this.status=plainIssue.status;\r\n        this.comments=plainIssue.comments;\r\n        this.communityId=plainIssue.communityId;\r\n    }\r\n}\r\n\r\nexport default IssueModel;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nimport IssueModel from '../../model/IssueModel';\r\nimport jsonIssues from \"../../data/issues.json\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\n\r\nfunction DashboardPage() {\r\n    // useState(jsonUsers.map(plainUser => new UserModel(plainUser)));\r\n    const [issues, setIssues] = useState(jsonIssues.map(plainIssue => new IssueModel(plainIssue)));\r\n    const activeUser = useContext(ActiveUserContext);\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>DashboardPage</h1>\r\n            <ul>{issues.filter(issue => issue.communityId === activeUser.communityId).map(title => <li>{title.title}</li>)}</ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport './HomePage.css'\r\nfunction HomePage(props) {\r\n    return (\r\n        <div>\r\n            HomePage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Container, Form, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './LoginPage.css'\r\n\r\n\r\nimport './LoginPage.css'\r\nfunction LoginPage({ users, onLogin }) {\r\n    const [email, setEmail] = useState(\"chuck@gmail.com\");\r\n    const [pwd, setPwd] = useState(\"123\");\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (activeUser) {\r\n        // return <Redirect to=\"/dashboard\" />\r\n        return <Redirect to=\"#/message\"/>\r\n    }\r\n\r\n    function login() {\r\n        const activeUser = users.find(user => user.email === email && user.pwd === pwd);\r\n\r\n        if (activeUser) {\r\n            onLogin(activeUser);\r\n        } else {\r\n            setShowInvalidLogin(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <h1 className=\"p-header\">Login to Homeowner association </h1>\r\n           \r\n            {showInvalidLogin ?\r\n                <Alert variant=\"danger\" onClose={() => setShowInvalidLogin(false)} dismissible>Invalid Credentials!</Alert> : null}\r\n            <div className=\"p-form\">\r\n            {/* <p>or <Link to=\"/signup\">create an account</Link></p> */}\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\"\r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n                    <div className=\"d-grid gap-2\">\r\n                        <Button variant=\"success\" type=\"button\" onClick={login}>\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","class UserModel {\r\n    constructor(plainUser) {\r\n        this.id = plainUser.id;\r\n        this.fname = plainUser.fname;\r\n        this.lname = plainUser.lname;\r\n        this.email = plainUser.email;\r\n        this.pwd = plainUser.pwd;\r\n        this.isCommittee = plainUser.isCommittee;\r\n        this.apt = plainUser.apt;\r\n        this.communityId = plainUser.communityId;\r\n        this.img=plainUser.img;\r\n\r\n    }\r\n}\r\n\r\nexport default UserModel;","import React from 'react';\r\nimport { Container, Image, Row, Col } from 'react-bootstrap';\r\nimport './CommentComponent.css'\r\nfunction CommentComponent({ comment, createdBy }) {\r\n    // console.log(createdBy);\r\n    if (createdBy.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"c-comment\">\r\n            <Container >\r\n                <Row>\r\n                    <Col md={3} sm={6}>\r\n                        <Image className=\"tenant-img\" src={createdBy[0].img} roundedCircle />\r\n                        <h1 className=\"comment-header\">{`${createdBy[0].fname} ${createdBy[0].lname}`}</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3} sm={6}>\r\n                        <p className=\"comment-date\">{comment.createdAt}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p className=\"comment-text\">{comment.text}</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentComponent;","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction DeleteModal({ onShow, onClose, onDelete ,msg }) {\r\n    function deleteAccept(){\r\n        onDelete();\r\n        onClose();\r\n    }\r\n    return (\r\n        <div>\r\n                <Modal show={onShow} onHide={onClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{msg.title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Do you sure want to delete this message?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" onClick={onClose}>\r\n                            No\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={deleteAccept}>\r\n                            Yes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteModal;","import React, { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport CommentComponent from '../CommentComponent/CommentComponent';\r\nimport \"./MessageComponent.css\";\r\nimport { FcInfo } from 'react-icons/fc';\r\nimport { FiInfo ,FiSend} from 'react-icons/fi';\r\nimport { RiDeleteBinLine, RiDeleteBinFill } from 'react-icons/ri';\r\nimport DeleteModal from '../DeleteModal/DeleteModal';\r\n\r\n\r\n//function MessageComponent({ msg, msgCreatedBy, setIsRead, isRead, comments, users, onAddComment, onTextComment, newCommentText, onRemove }) {\r\nfunction MessageComponent({ msg, msgCreatedBy, setIsRead, isRead, comments, users, onAddComment, onRemove }) {\r\n\r\n    const [hide, setHide] = useState(\"hide\");\r\n    const [textInput, setTextIput] = useState(\"\");\r\n    const [hoverInfo, setHoverInfo] = useState(false);\r\n    const [hoverDel, setHoverDel] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n\r\n\r\n\r\n    function showDetails() {\r\n        setHoverInfo(!hoverInfo)\r\n        setHide(hide ? \"\" : \"hide\");\r\n        setIsRead(\"true\");\r\n    }\r\n    function saveText() {\r\n        if (textInput) {\r\n            onAddComment(textInput, msg.id);\r\n            setTextIput(\"\");\r\n        }\r\n    }\r\n    //commetComp is array of comments belonging to message\r\n  \r\n    const commetComp = comments.map(c => <CommentComponent comment={c} createdBy={users.filter(user => user.id === c.createdBy)}/>)\r\n    \r\n                   \r\n        \r\n\r\n    const btnDelete = hoverDel ? <RiDeleteBinFill size=\"2em\" onClick={() => setShowModal(true)} /> : <RiDeleteBinLine size=\"2em\" />;\r\n\r\n    return (\r\n        // <div className={\"c-message \" + isRead} onClick={showDetails} >\r\n        <div className={\"c-message \"}  >\r\n\r\n\r\n\r\n            <Container >\r\n                <Row>\r\n                    <Col >{msgCreatedBy.fname + \" \" + msgCreatedBy.lname}</Col>\r\n                    <Col>{msg.title}</Col>\r\n                    <Col>{msg.createdAt}</Col>\r\n                    {/* <Col><div className=\"btn-hideshow\" onClick={showDetails}>{hide ? \"+\" : \"-\"}</div></Col> */}\r\n                    <Col>\r\n                        <div className=\"message-info\" onMouseOver={() => setHoverInfo(true)} onMouseLeave={() => setHoverInfo(false)}>\r\n                            {hoverInfo ? <FcInfo size=\"2em\" onClick={showDetails} /> : <FiInfo size=\"2em\" />}\r\n                        </div>\r\n                    </Col>\r\n                    {/* {activeUser.isCommittee ? <Col><div className=\"btn-hideshow\" onClick={() => onRemove(msg)}>X</div></Col> : null} */}\r\n                    {\r\n                        activeUser.isCommittee ?\r\n                            <Col>\r\n                                <div className=\"message-delete\" onMouseOver={() => setHoverDel(true)} onMouseLeave={() => setHoverDel(false)}>\r\n                                    {btnDelete}\r\n                                </div>\r\n                            </Col> : null\r\n                    }\r\n                </Row>\r\n                <Row>\r\n                    <Col className={\"commet-col \" + hide}>\r\n                        {msg.details}\r\n                        {commetComp}\r\n                        <div className=\"container-input\">\r\n                            <input className=\"comment-input\" value={textInput} type=\"text\" placeholder=\"Add new Comment\" onChange={e => setTextIput(e.target.value)} />\r\n                            <Button className=\"comment-btn\" variant=\"success\" onClick={() => saveText()}>Send <FiSend/> </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <DeleteModal onShow={showModal} onClose={() => setShowModal(false)} onDelete={() => onRemove(msg)} msg={msg} />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageComponent;","class CommentModel{\r\n    constructor(plainCmt){\r\n        this.id=plainCmt.id;\r\n        this.createdBy=plainCmt.createdBy;\r\n        this.createdAt=plainCmt.createdAt;\r\n        this.text=plainCmt.text;\r\n        this.comments=plainCmt.comments;\r\n        this.topicId=plainCmt.topicId;//topicId is id of message , issue  or comment\r\n    }\r\n}\r\n\r\nexport default CommentModel;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Row, Col, Image } from 'react-bootstrap';\r\n\r\nfunction NewMessageModal({ onShow, onClose, onCreate }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"Info\");\r\n    const [img, setImg] = useState(null);\r\n\r\n    function clearForm() {\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setPriority(\"Info\");\r\n        setImg(null);\r\n    }\r\n\r\n    function createMessage(){\r\n        onCreate(title, priority, img, details);\r\n        clearForm();\r\n        onClose();\r\n\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n        setImg(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Modal show={onShow} onHide={onClose} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>New Message</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalName\">\r\n                        <Form.Label column sm={3}>\r\n                            Message Title:\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"text\" value={title} onChange={e => setTitle(e.target.value)} />\r\n\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalDesc\">\r\n                        <Form.Label column sm={3}>\r\n                            Details:\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control as=\"textarea\" value={details} rows={3} onChange={e => setDetails(e.target.value)} />\r\n\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalImage\">\r\n                        <Form.Label column sm={3}>\r\n                            Image:\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalImage\">\r\n                    <Form.Label column sm={3}>\r\n                            Chose Priority:\r\n                        </Form.Label>  \r\n                    <Col sm={9}>\r\n                    <Form.Select aria-label=\"Default select example\"value={priority} onChange={e=>setPriority(e.target.value)}>\r\n                        <option value=\"Info\">Info</option>\r\n                        <option value=\"Important\">Important</option>\r\n                    </Form.Select>\r\n                    </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Image src={img ? URL.createObjectURL(img) : \"\"} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createMessage}>\r\n                    Create a Message\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nexport default NewMessageModal;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './MessagePage.css'\r\nimport { useContext } from 'react';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MessageComponent from '../../components/MessageComponent/MessageComponent';\r\nimport jsonComments from \"../../data/comments.json\"\r\nimport CommentModel from '../../model/CommentModel';\r\nimport CommentComponent from '../../components/CommentComponent/CommentComponent';\r\nimport { nanoid } from 'nanoid';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport NewMessageModal from '../../components/NewMessageModal/NewMessageModal';\r\nimport { BiMessageEdit } from 'react-icons/bi';\r\n\r\nfunction MessagePage({ users, messages, allComments, setAllComments,onNewMessage,onRemove}) {\r\n\r\n    const [isRead, setIsRead] = useState(\"nonSeen\");\r\n    const [showModal,setShowModal]=useState(false);\r\n    \r\n    const activeUser = useContext(ActiveUserContext);\r\n    \r\n\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    function msgCreatedBy(msg) {\r\n        return users.filter(user => user.id === msg.createdBy)[0];\r\n    }\r\n\r\n\r\n    function allMessageComments(msg) {\r\n\r\n        return allComments.filter(cmt => cmt.topicId === msg.id);\r\n    }\r\n\r\n    function addNewComment(text,topicId) {\r\n       \r\n\r\n            const newComment = new CommentModel({\r\n                id: nanoid(6),\r\n                createdBy: activeUser.id,\r\n                createdAt: new Date().toISOString().slice(0, 10),\r\n                text: text,\r\n                comments: null,\r\n                topicId: topicId\r\n            });\r\n            setAllComments(allComments.concat(newComment));\r\n\r\n      \r\n    }\r\n\r\n   \r\n\r\n\r\n    // filter return all community message  \r\n    const msgsComps = messages.filter(msg => msg.communityId === activeUser.communityId).\r\n        map(m => <MessageComponent msg={m} msgCreatedBy={msgCreatedBy(m)} setIsRead={setIsRead} isRead={isRead} comments={allMessageComments(m)} users={users}\r\n            onAddComment={addNewComment}  onRemove={onRemove} />);\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"p-message\">\r\n            <Container >\r\n                <div className=\"msg-heading\">\r\n               {activeUser.isCommittee?<div className=\"new-message\" onClick={()=>setShowModal(true)}> New Message <BiMessageEdit/></div> :null}\r\n                </div>\r\n                <Row>\r\n                    {msgsComps}\r\n                </Row>\r\n                <NewMessageModal onShow={showModal} onClose={()=>setShowModal(false)} onCreate={onNewMessage}/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagePage;","class MessageModel{\r\n    constructor(plainMessage){\r\n        this.id=plainMessage.id;\r\n        this.createdBy=plainMessage.createdBy;\r\n        this.createdAt=plainMessage.createdAt;\r\n        this.title=plainMessage.title;\r\n        this.details=plainMessage.details;\r\n        this.priority=plainMessage.priority;\r\n        this.comments=plainMessage.comments;\r\n        this.communityId=plainMessage.communityId;\r\n        this.img=plainMessage.img;\r\n    }\r\n}\r\n\r\nexport default  MessageModel;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Form, Button, Row ,Alert} from 'react-bootstrap';\r\nimport UserModel from '../../model/UserModel';\r\n\r\nfunction UpdateFormComponent({ onUpdateTenanat, tenant, onShowBtnHideForm }) {\r\n    const [fname, setFname] = useState(tenant.fname);\r\n    const [lname, setLname] = useState(tenant.lname);\r\n    const [apt, setApt] = useState(tenant.apt);\r\n    const [email, setEmail] = useState(tenant.email);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isCommittee, setIsCommittee] = useState(tenant.isCommittee);\r\n    const [showInvalidPsw, setShowInvalidPsw] = useState(false);\r\n\r\n    function clearForm() {\r\n        setFname(\"\");\r\n        setLname(\"\");\r\n        setApt(\"\");\r\n        setEmail(\"\");\r\n        setIsCommittee(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    function updateTenantParams() {\r\n      if(!password){\r\n        setShowInvalidPsw(true)\r\n      }\r\n      else{  \r\n        const updateTenant = new UserModel(\r\n            {\r\n                id: tenant.id,\r\n                fname: fname,\r\n                lname: lname,\r\n                email: email,\r\n                pwd: password,\r\n                apt: apt,\r\n                communityId: tenant.communityId,\r\n                img: tenant.img,\r\n                isCommittee: isCommittee\r\n            });\r\n        onUpdateTenanat(updateTenant);\r\n        clearForm();\r\n        onShowBtnHideForm();\r\n    }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"c-update-form\">\r\n            <Form>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalFirstName\">\r\n                    <Form.Label column sm={2}>\r\n                        First Name:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"First Name\" value={fname} onChange={e => setFname(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalLastName\">\r\n                    <Form.Label column sm={2}>\r\n                        Last Name:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Last Name\" value={lname} onChange={e => setLname(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalApartment\">\r\n                    <Form.Label column sm={2}>\r\n                        Apartment:\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"text\" placeholder=\"Apartment\" value={apt} onChange={e => setApt(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n                {showInvalidPsw?<Alert variant=\"danger\" onClose={() => setShowInvalidPsw(false)} dismissible>Enter a password</Alert> : null}\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalCheck\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Form.Check label=\"Committee\" checked={isCommittee} onChange={() => setIsCommittee(!isCommittee)} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button onClick={updateTenantParams}>Update Tenant</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateFormComponent;","\r\nimport React, { useContext } from 'react';\r\nimport { Modal, Image, Button } from 'react-bootstrap';\r\nimport './InfoTenantModal.css'\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport UpdateFormComponent from '../UpdateFormComponent/UpdateFormComponent';\r\nimport { useState } from 'react';\r\n\r\nfunction InfoTenantModal({ onShow, onClose, tenant, onRemoveTenant, onUpdateTenant }) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [hideForm, setHideForm] = useState(true);\r\n\r\n\r\n\r\n\r\n    const adminActions =\r\n        <>\r\n            {hideForm ?\r\n                <Button style={{ margin: \"5px\" }} variant=\"success\" onClick={() => setHideForm(false)}>\r\n                    Update Info\r\n                </Button> : null}\r\n            <Button style={{ margin: \"5px\" }} variant=\"danger\" onClick={deletTenant}>\r\n                Delete a {tenant.fname}\r\n            </Button>\r\n            {hideForm ? null : <UpdateFormComponent tenant={tenant} onUpdateTenanat={onUpdateTenant} onShowBtnHideForm={() => setHideForm(true)} />}\r\n        </>\r\n\r\n    function close() {\r\n        onClose();\r\n        setHideForm(true)\r\n    }\r\n    function deletTenant() {\r\n        onRemoveTenant(tenant);\r\n        close();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={onShow} onHide={close} dialogClassName=\"modal-90w\" aria-labelledby=\"example-custom-modal-styling-title\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        <Image className=\"modal-img\" src={tenant.img} rounded />\r\n                        {`${tenant.fname} ${tenant.lname}`}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p><span style={{ fontWeight: \"bold\" }}> Email: </span>{tenant.email}</p>\r\n                    <p><span style={{ fontWeight: \"bold\" }}> apt: </span>{tenant.apt}</p>\r\n                    {activeUser.isCommittee ? adminActions : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={close}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InfoTenantModal;","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Button, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport './TenantComponent.css';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { useState } from 'react';\r\nimport InfoTenantModal from '../InfoTenantModal/InfoTenantModal';\r\n\r\nfunction TenantComponent({ tenant,tenantAction }) {\r\n    // const [hide, setHide] = useState(\"hide\");\r\n    const [showModal,setShowModal]=useState(false);\r\n    \r\n    return (\r\n        <>\r\n           \r\n            {/* <Row className=\"c-tenant\" onClick={() => setHide(hide ? \"\" : \"hide\")}> */}\r\n                <Row className=\"c-tenant\" onClick={() => setShowModal(true)}>\r\n                    <Col key={tenant.id} md={3} sm={6}>\r\n                        <Image className=\"tenant-img\" src={tenant.img} roundedCircle />\r\n                        {`${tenant.fname} ${tenant.lname}`}\r\n                    </Col>\r\n                </Row>\r\n                {/* <Row className={\"tenant-info \"+hide}>\r\n            </Row> */}\r\n            <InfoTenantModal onShow={showModal} onClose={()=>setShowModal(false)}  tenant={tenant} onRemoveTenant={tenantAction.onRemoveTenant} onUpdateTenant={tenantAction.onUpdateTenant}/>\r\n           \r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TenantComponent;","import React, { useState } from 'react';\r\nimport { Alert, Button, Form, Col, Row,Modal } from 'react-bootstrap';\r\n\r\nfunction NewTenantModal({ onAddTenant, onShow, onClose }) {\r\n    //fname, lname, email, password, isCommittee,apt\r\n    const [fname, setFname] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [apt, setApt] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isCommittee, setIsCommittee] = useState(\"\");\r\n    const [img, setImg] = useState(\"\");\r\n    const [showInvalid, setShowInvalid] = useState(false);\r\n\r\n    function clearForm() {\r\n        setFname(\"\");\r\n        setLname(\"\");\r\n        setApt(\"\");\r\n        setEmail(\"\");\r\n        setIsCommittee(\"\");\r\n        setPassword(\"\");\r\n        setImg(\"\");\r\n    }\r\n\r\n    function addNewTenant() {\r\n        //     if (!fname || !lname || !email || password || !isCommittee || !apt || !img) {\r\n        //         setShowInvalid(true);\r\n        //     }\r\n        //     else{\r\n        //     onAddTenant(fname, lname, email, password, isCommittee, apt, img);\r\n        //     clearForm();\r\n        //    }\r\n        onAddTenant(fname, lname, email, password, isCommittee, apt, img);\r\n        clearForm();\r\n        onClose();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"c-newtenant\"}>\r\n\r\n\r\n\r\n            <Modal show={onShow} onHide={onClose} size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>New Message</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n\r\n                     \r\n                            {showInvalid ? <Alert variant=\"danger\" onClose={() => setShowInvalid(false)} dismissible>Please enter all required information</Alert> : null}\r\n                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalFirstName\">\r\n                                <Form.Label column sm={2}>\r\n                                    First Name:\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control type=\"text\" placeholder=\"First Name\" value={fname} onChange={e => setFname(e.target.value)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalLastName\">\r\n                                <Form.Label column sm={2}>\r\n                                    Last Name:\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control type=\"text\" placeholder=\"Last Name\" value={lname} onChange={e => setLname(e.target.value)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalApartment\">\r\n                                <Form.Label column sm={2}>\r\n                                    Apartment:\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control type=\"text\" placeholder=\"Apartment\" value={apt} onChange={e => setApt(e.target.value)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                                <Form.Label column sm={2}>\r\n                                    Email\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                                <Form.Label column sm={2}>\r\n                                    Password\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalImg\">\r\n                                <Form.Label column sm={2}>\r\n                                    Image Link:\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control type=\"text\" placeholder=\"picture link\" value={img} onChange={e => setImg(e.target.value)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalCheck\">\r\n                                <Col sm={{ span: 10, offset: 2 }}>\r\n                                    <Form.Check label=\"Committee\" onChange={() => setIsCommittee(!isCommittee)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group as={Row} className=\"mb-3\">\r\n                                <Col sm={{ span: 10, offset: 2 }}>\r\n                                    <Button onClick={addNewTenant}>Add Tenant</Button>\r\n                                </Col>\r\n                            </Form.Group> */}\r\n                        </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={addNewTenant}>\r\n                            Add Tenant\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewTenantModal;","import './TenantsPage.css'\r\nimport React, { useContext } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TenantComponent from '../../components/TenantComponent/TenantComponent';\r\nimport UpdateFormComponent from '../../components/UpdateFormComponent/UpdateFormComponent';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport {BiUserPlus}  from 'react-icons/bi';\r\nimport { useState } from 'react';\r\nimport NewTenantModal from '../../components/NewTenantModal/NewTenantModal';\r\n\r\nfunction TenantsPage({ tenatsProps }) {\r\n    const [showModal,setShowModal]=useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    const tenants = tenatsProps.users.filter(user=>user.communityId===activeUser.communityId).map(tenant => <TenantComponent tenant={tenant} tenantAction={tenatsProps} />);\r\n\r\n\r\n    return (\r\n        <div className=\"p-tenants\">\r\n            <Container >\r\n            {activeUser.isCommittee?<div className=\"new-tenant\" onClick={()=>setShowModal(true)}>Add New Tenant <BiUserPlus size=\"1.3em\"/> </div>:null}\r\n                {tenants}\r\n                {/* <Button onClick={()=> tenatsProps.onCheck()}>check!</Button> */}\r\n               \r\n            </Container>\r\n           <NewTenantModal  onShow={showModal} onClose={()=>setShowModal(false)} onAddTenant={tenatsProps.onAddTenant}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TenantsPage;","\r\nclass VotingModel{\r\n    constructor(plainVoting){\r\n        this.id=plainVoting.id;\r\n        this.communityId=plainVoting.communityId;\r\n        this.createdBy=plainVoting.createdBy;\r\n        this.createdAt=plainVoting.createdAt;\r\n        this.title=plainVoting.title;\r\n        this.details=plainVoting.details;\r\n        this.options=plainVoting.options;\r\n        this.votes=plainVoting.votes;\r\n\r\n    }\r\n}\r\nexport default VotingModel;","import React, { useMemo, useState } from 'react';\r\nimport { Card, Col, Form, Row } from 'react-bootstrap';\r\nimport './VotingComponent.css'\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nfunction VotingComponent({ voting, onAnswer, allVoting }) {\r\n    // const [answer, setAnswer] = useState(null);\r\n    //console.log(answer);\r\n\r\n    const chartData = useMemo(() => {\r\n        console.log(\"calculating chartData\");\r\n        let yes = 0;\r\n        let no = 0;\r\n        \r\n        for (const vote of voting.votes) {\r\n           \r\n\r\n                if (vote.answer === 0) {\r\n                    ++yes;\r\n                } else {\r\n                    ++no;\r\n                }\r\n           \r\n        }\r\n        return {\r\n            labels: ['Yes', 'No'],\r\n            datasets: [\r\n                {\r\n                    label: '# of options',\r\n                    data: [yes, no],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                    ],\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        }\r\n    }, [allVoting])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"c-voting\">\r\n\r\n            <Card className=\"voting-card\">\r\n                <Card.Header className=\"voting-title\" as=\"h5\">{voting.title}</Card.Header>\r\n                <Card.Body className=\"voting-body\">\r\n                    <Card.Title>{voting.details}</Card.Title>\r\n                    <Form>\r\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalVoiting\">\r\n                            \r\n                            <Col sm={10}>\r\n                                <div key=\"radio\" className=\"mb-3\">\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label={voting.options[0]}\r\n                                        name=\"group1\"\r\n                                        type=\"radio\"\r\n                                        id={`${voting.id}-1`}\r\n                                        onClick={() => onAnswer(voting, 0)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label={voting.options[1]}\r\n                                        name=\"group1\"\r\n                                        type=\"radio\"\r\n                                        id={`${voting.id}-2`}\r\n                                        onClick={() => onAnswer(voting, 1)}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                    <div className=\"chart-pie\">\r\n                        <Pie data={chartData} />\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingComponent;","import React, { useMemo } from 'react';\r\nimport { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport VotingComponent from '../../components/VotingComponent/VotingComponent';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nimport './VotingPage.css'\r\nimport { Redirect } from 'react-router-dom';\r\nfunction VotingPage({ allVoting,voting }) {\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n\r\n\r\n    const votingContent = allVoting.filter(rVotes=>rVotes.communityId === activeUser.communityId).map(cv => <VotingComponent voting={cv} onAnswer={voting} allVoting={allVoting}/>)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"p-voting\">\r\n         \r\n         {/* <VotingComponent voting={allVoting[0]} onAnswer={voting} allVoting={allVoting}/> */}\r\n         {votingContent.length>0? votingContent:<span className=\"no-voting\">You dont have any voiting.</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingPage;","import { HashRouter, Route, Switch } from \"react-router-dom\";\nimport NavbarHOA from \"./components/NavbarHOA/NavbarHOA\";\nimport DashboardPage from \"./pages/DashboardPage/DashboardPage\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport { useState } from \"react\";\nimport UserModel from \"./model/UserModel\";\nimport ActiveUserContext from \"./shared/ActiveUserContext\";\nimport MessagePage from \"./pages/MessagePage/MessagePage\";\nimport MessageModel from \"./model/MessageModel\";\n\nimport jsonUsers from \"./data/users.json\";\nimport jsonMessages from \"./data/messages.json\";\nimport jsonComments from \"./data/comments.json\";\nimport jsonVoting from  \"./data/voiting.json\";\n\nimport CommentModel from \"./model/CommentModel\";\n\n\nimport { nanoid } from \"nanoid\";\nimport TenantsPage from \"./pages/TenantsPage/TenantsPage\";\nimport VotingModel from \"./model/VotingModel\";\nimport VotingPage from \"./pages/VotingPage/VotingPage\";\n\nfunction App() {\n  const [users, setUsers] = useState(jsonUsers.map(plainUser => new UserModel(plainUser)));\n  const [activeUser, setActiveUser] = useState();\n  const [messages, setMessages] = useState(jsonMessages.map(msg => new MessageModel(msg)));\n  const [allComments, setAllComments] = useState(jsonComments.map(cmt => new CommentModel(cmt)));\n  const [allVoting,setAllVoting] = useState(jsonVoting.map(vote=>new VotingModel(vote)));\n  const [vote,setVote]=useState(null);\n  console.log(allVoting[0].createdBy);\n\n\n//vote is voite answer is what user choise\nfunction voting( vote,answer){\n  const index =allVoting.indexOf(vote);\n  console.log(index);\n  const cVote = {...allVoting[index]};\n  const indexUser= cVote.votes.findIndex(v=>v.voteId===activeUser.id) ;\n  console.log(\"index user is\" +indexUser);\n  if(indexUser === -1){\n    cVote.votes.push(\n                  { \n                    voteId:activeUser.id,\n                        answer:answer\n                  });\n    const cloneAllVoting = [...allVoting];\n    cloneAllVoting[index]=cVote;              \n    setAllVoting(cloneAllVoting);                  \n  }\n}\n\n  function login(activeUser) {\n    setActiveUser(activeUser);\n\n  }\n  function logout() {\n    setActiveUser(null);\n\n  }\n\n  function createNewMessage(title, priority, img, details) {\n    const newMessage = new MessageModel({\n      id: nanoid(6),\n      createdBy: activeUser.id,\n      createdAt: new Date().toISOString().slice(0, 10),\n      title: title,\n      details: details,\n      priority: priority,\n      comments: null,\n      communityId: activeUser.communityId,\n      img: img\n    });\n    setMessages(messages.concat(newMessage));\n\n  }\n \n\n  function addNewTenant(fname, lname, email, pwd, isCommittee,apt,img) {\n    const newUser = new UserModel({\n      id: nanoid(6),\n      fname: fname,\n      lname: lname,\n      email: email,\n      pwd: pwd,\n      isCommittee: isCommittee,\n      apt:apt,\n      communityId: activeUser.communityId,\n      img:img\n    });\n\n    setUsers(users.concat(newUser));\n  }\n  function removeTenant(tenant){\n    const indexTenant=users.indexOf(tenant);\n    const tempArr=[...users];\n    tempArr.splice(indexTenant, 1);\n    setUsers(tempArr);\n  }\n\n  function updateTenant(tenant){\n    const index = users.findIndex(user=>user.id===tenant.id);\n    const tempArr=[...users];\n    tempArr[index]=tenant;\n    setUsers(tempArr);\n  }\n  function check(){\n    console.log(\"work\");\n  }\n\n  const tenatsProps = {\n    users: users,\n    onAddTenant:addNewTenant,\n    onRemoveTenant:removeTenant,\n    onUpdateTenant:updateTenant,\n    onCheck:check\n  }\n\n\n\n  function deleteMessage(msg) {\n    const index = messages.indexOf(msg);\n    const tempArr = [...messages];\n    tempArr.splice(index, 1);\n    setMessages(tempArr);\n  }\n\n  return (\n    <div>\n\n      <ActiveUserContext.Provider value={activeUser}>\n        <HashRouter>\n          <Switch>\n\n            <Route exact path=\"/\">\n              <NavbarHOA onLogout={logout} />\n              {/* <HomePage /> */}\n              <MessagePage users={users} messages={messages} allComments={allComments} setAllComments={setAllComments} onNewMessage={createNewMessage} onRemove={deleteMessage} />\n\n            </Route>\n\n            <Route exact path=\"/login\">\n              <NavbarHOA onLogout={logout} />\n              <LoginPage users={users} onLogin={login} />\n            </Route>\n\n            <Route exact path=\"/dashboard\">\n              <NavbarHOA onLogout={logout} />\n              <DashboardPage />\n            </Route>\n\n            <Route exact path=\"/message\">\n              <NavbarHOA onLogout={logout} />\n              <MessagePage users={users} messages={messages} allComments={allComments} setAllComments={setAllComments} onNewMessage={createNewMessage} onRemove={deleteMessage} />\n            </Route>\n\n            <Route exact path=\"/tenants\">\n              <NavbarHOA onLogout={logout} />\n              <TenantsPage tenatsProps={tenatsProps}/>\n            </Route>\n\n            <Route exact path=\"/voting\">\n              <NavbarHOA onLogout={logout} />\n              <VotingPage  allVoting={allVoting}  voting={voting}/>\n            </Route>\n\n\n          </Switch>\n        </HashRouter>\n      </ActiveUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}